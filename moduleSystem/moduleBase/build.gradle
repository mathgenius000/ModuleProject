apply plugin: 'com.android.library'

def config = rootProject.ext.android//配置
def librarys = rootProject.ext.dependencies//依赖

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation librarys.appcompat
    testImplementation librarys.junit
    androidTestImplementation librarys.junitTest
    androidTestImplementation librarys.espressoTest

    api project(path: ':moduleSystem:moduleDatabase')
    api project(path: ':moduleSystem:moduleHttp')
    api project(path: ':moduleSystem:moduleSherlockAdapter')

    api librarys.basePopup

    api librarys.refreshLayoutKernel
    api librarys.refreshHeaderClassics
//    api librarys.refreshHeaderRadar
//    api librarys.refreshHeaderFalsify
//    api librarys.refreshHeaderMaterial
//    api librarys.refreshHeaderTwoLevel
//    api librarys.refreshFooterBall
    api librarys.refreshFooterClassics

    api librarys.butterknife
    annotationProcessor librarys.butterknifeCompiler

    api librarys.arouter
    annotationProcessor librarys.arouterCompiler

    api librarys.eventbus
}